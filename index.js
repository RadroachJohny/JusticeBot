// const { Telegraf, Markup } = require('telegraf')
require('dotenv').config();

const {
	gameOptions,
	againOptions,
	greet_message,
	start_game_invite,
	start_game_btn,
	winner_btn
} = require('./options');
//
const questions = require('./questions');

const {
	question_1,
	question_2,
	question_3,
	question_4,
	winner_message,
} = require('./questions');

// const bot = new Telegraf(process.env.BOT_TOKEN);
//
// bot.start( async (ctx) => {
// 	await ctx.replyWithSticker('https://tlgrm.eu/_/stickers/4dd/300/4dd300fd-0a89-3f3d-ac53-8ec93976495e/1.webp')
// 	await ctx.reply(greet_message)
// 	await ctx.reply(start_game_invite,
// 		Markup.inlineKeyboard([
// 			Markup.button.callback('–ü–æ–µ—Ö–∞–ª–∏', '–ø–æ–µ—Ö–∞–ª–∏'),
// 		]))
// })
//
//
// bot.help((ctx) => ctx.reply('Send me a sticker'))
// bot.on('sticker', (ctx) => ctx.reply('üëç'))
// bot.hears('hi', (ctx) => ctx.reply('Hey there'))
// bot.launch()
//
// bot.on('callback_query', (ctx) => {
// 	// Explicit usage
// 	// ctx.telegram.answerCbQuery(ctx.callbackQuery.id)
//
// 	// Using context shortcut
//
// 	// console.log(ctx.message)
// 	if(ctx.message.text === '–ü–æ–µ—Ö–∞–ª–∏') {
// 		ctx.reply('–í–æ–ø—Ä–æ—Å 1');
// 	}
//
// 	ctx.answerCbQuery()
//
// })


const TelegramApi = require('node-telegram-bot-api');
require('dotenv').config();

const bot = new TelegramApi(process.env.BOT_TOKEN, {polling: true})





const chats = {};

const memoize = {};


const startGame = async (chatId) => {
	await bot.sendMessage(chatId, '–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã –ø–æ–ø—Ä–æ–±—É–π –µ—ë –æ—Ç–≥–∞–¥–∞—Ç—å')
	const randomNumber = Math.floor(Math.random() * 10);
	chats[chatId] = randomNumber;
	await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π!', gameOptions);
}

const start = () => {
	bot.setMyCommands([
		{command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
		{command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ'},
		{command: '/game', description: '–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç'},
	])

	console.log(questions)

	bot.on('message', async msg => {
		const text = msg.text;
		const chatId = msg.chat.id;

		if( text === `/start`) {
			await bot.sendSticker(chatId, 'https://tlgrm.eu/_/stickers/4dd/300/4dd300fd-0a89-3f3d-ac53-8ec93976495e/1.webp')
			await bot.sendMessage(chatId, greet_message)
			return bot.sendMessage(chatId, start_game_invite, start_game_btn)
		}

		if(text === `/info`) {
			return bot.sendMessage(chatId, `–¢–µ–±—è –∑–æ–≤—É—Ç ${msg.from.first_name} ${msg.from.lastName || ''}`)
		}

		// if(text === '/game') {
		// 	return startGame(chatId);
		// }

		return bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏, –Ω–æ —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–∏—Ö –∫–æ–º–∞–Ω–¥, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')

	})

	bot.on('callback_query', async msg => {
		const data = msg.data;
		const chatId = msg.message.chat.id;

		if(data === '/again') {
			return startGame(chatId);
		}

		if(data === '–ø–æ–µ—Ö–∞–ª–∏') {
			return await bot.sendMessage(chatId, question_1.question, question_1.options)
		}





		switch(data) {
			case question_1.answer:
				// if(!memoize.question1) {
					console.log(1)
					// memoize.question1 = true;
					await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
					return await bot.sendMessage(chatId, question_2.question, question_2.options)
				// }
			case question_2.answer:
				console.log(2);
				console.log(data);
				console.log(question_2.answer);
				 await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
				return await bot.sendMessage(chatId, question_3.question, question_3.options)
			case question_3.answer:
				console.log(3)
				await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
				return bot.sendMessage(chatId, question_4.question, question_4.options)
			case question_4.answer:
				await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
				return await bot.sendMessage(chatId, winner_message, winner_btn.options);

			default:
				return await bot.sendMessage(chatId, '–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ—É–π –µ—â—ë —Ä–∞–∑');
		}

		// if(data == question_1.answer) {
		// 	await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
		// 	return await bot.sendMessage(chatId, question_2.question, question_2.options)
		// } else if(data == question_2.answer) {
		// 	await bot.sendMessage(chatId, '–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!');
		// }
		// else {
		// 	return await bot.sendMessage(chatId, '–≠—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ—É–π –µ—â—ë —Ä–∞–∑');
		// }

		// if(data == chats[chatId]) {
		// 	return await bot.sendMessage(chatId, `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Ç—ã –æ—Ç–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}`, againOptions)
		// } else {
		// 	return await bot.sendMessage(chatId, `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª, –±–æ—Ç –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}`, againOptions)
		// }
	})
}

start();